diff -cwr n:/project/C/texinfo-3.12.orig/lib/system.h i:/project/C/texinfo-3.12/lib/system.h
*** n:/project/C/texinfo-3.12.orig/lib/system.h	Thu Jul 31 21:34:36 1997
--- i:/project/C/texinfo-3.12/lib/system.h	Tue Apr 27 23:20:38 1999
***************
*** 17,28 ****
--- 17,32 ----
     along with this program; if not, write to the Free Software Foundation,
     Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */
  
+ /* Modified by Klaus Gebhardt, 1999 */
+ 
  #ifndef TEXINFO_SYSTEM_H
  #define TEXINFO_SYSTEM_H
  
  #define _GNU_SOURCE
  
+ #ifdef HAVE_CONFIG_H
  #include <config.h>
+ #endif
  
  /* <unistd.h> should be included before any preprocessor test
     of _POSIX_VERSION.  */
***************
*** 37,48 ****
  #ifdef HAVE_LOCALE_H
  #include <locale.h>
  #endif
  #include <libintl.h>
  
  /* Don't use bcopy!  Use memmove if source and destination may overlap,
     memcpy otherwise.  */
  #ifdef HAVE_STRING_H
! # if !STDC_HEADERS && HAVE_MEMORY_H
  #  include <memory.h>
  # endif
  # include <string.h>
--- 41,55 ----
  #ifdef HAVE_LOCALE_H
  #include <locale.h>
  #endif
+ 
+ #ifndef __EMX__
  #include <libintl.h>
+ #endif
  
  /* Don't use bcopy!  Use memmove if source and destination may overlap,
     memcpy otherwise.  */
  #ifdef HAVE_STRING_H
! # if !defined (STDC_HEADERS) && defined (HAVE_MEMORY_H)
  #  include <memory.h>
  # endif
  # include <string.h>
diff -cwr n:/project/C/texinfo-3.12.orig/info/dir.c i:/project/C/texinfo-3.12/info/dir.c
*** n:/project/C/texinfo-3.12.orig/info/dir.c	Sun Jul 27 22:09:20 1997
--- i:/project/C/texinfo-3.12/info/dir.c	Wed Apr 28 21:13:22 1999
***************
*** 19,24 ****
--- 19,26 ----
  
     Written by Brian Fox (bfox@ai.mit.edu). */
  
+ /* Modified by Klaus Gebhardt, 1999 */
+ 
  #include "info.h"
  #include "info-utils.h"
  #include "filesys.h"
***************
*** 44,49 ****
--- 46,52 ----
    unsigned long inode;
  } dir_file_list_entry_type;
  
+ #ifndef __EMX__
  static int
  new_dir_file_p (test)
      struct stat *test;
***************
*** 67,73 ****
    dir_file_list[dir_file_list_len - 1].inode = test->st_ino;
    return 1;
  }
! 
  
  void
  maybe_build_dir_node (dirname)
--- 70,76 ----
    dir_file_list[dir_file_list_len - 1].inode = test->st_ino;
    return 1;
  }
! #endif
  
  void
  maybe_build_dir_node (dirname)
***************
*** 88,94 ****
--- 91,99 ----
  
    /* Initialize the list we use to avoid reading the same dir file twice
       with the dir file just found.  */
+ #ifndef __EMX__
    new_dir_file_p (&dir_buffer->finfo);
+ #endif
    
    path_index = update_tags = 0;
  
***************
*** 132,138 ****
--- 137,148 ----
            statable = (stat (fullpath, &finfo) == 0);
  
            /* Only add this file if we have not seen it before.  */
+ #ifndef __EMX__
            if (statable && S_ISREG (finfo.st_mode) && new_dir_file_p (&finfo))
+ #else
+           if (statable && S_ISREG (finfo.st_mode) &&
+ 	      (strcmp (dir_buffer->fullpath, fullpath) != 0))
+ #endif
              {
                long filesize;
                char *contents = filesys_read_info_file (fullpath, &filesize,
diff -cwr n:/project/C/texinfo-3.12.orig/info/doc.c i:/project/C/texinfo-3.12/info/doc.c
*** n:/project/C/texinfo-3.12.orig/info/doc.c	Tue Mar  3 19:31:02 1998
--- i:/project/C/texinfo-3.12/info/doc.c	Wed Apr 28 21:15:04 1999
***************
*** 1,17 ****
  /* doc.c -- Generated structure containing function names and doc strings.
  
     This file was automatically made from various source files with the
!    command "./makedoc".  DO NOT EDIT THIS FILE, only "./makedoc.c".
     Source files groveled to make this file include:
  
! 	./session.c
! 	./echo-area.c
! 	./infodoc.c
! 	./m-x.c
! 	./indices.c
! 	./nodemenu.c
! 	./footnotes.c
! 	./variables.c
  
     An entry in the array FUNCTION_DOC_ARRAY is made for each command
     found in the above files; each entry consists of a function pointer,
--- 1,17 ----
  /* doc.c -- Generated structure containing function names and doc strings.
  
     This file was automatically made from various source files with the
!    command "makedoc".  DO NOT EDIT THIS FILE, only "makedoc.c".
     Source files groveled to make this file include:
  
! 	echo-area.c
! 	footnotes.c
! 	indices.c
! 	infodoc.c
! 	m-x.c
! 	nodemenu.c
! 	session.c
! 	variables.c
  
     An entry in the array FUNCTION_DOC_ARRAY is made for each command
     found in the above files; each entry consists of a function pointer,
***************
*** 23,29 ****
  
  FUNCTION_DOC function_doc_array[] = {
  
! /* Commands found in "./session.c". */
     { info_next_line, "next-line", "Move down to the next line" },
     { info_prev_line, "prev-line", "Move up to the previous line" },
     { info_end_of_line, "end-of-line", "Move to the end of the line" },
--- 23,71 ----
  
  FUNCTION_DOC function_doc_array[] = {
  
! /* Commands found in "echo-area.c". */
!    { ea_forward, "echo-area-forward", "Move forward a character" },
!    { ea_backward, "echo-area-backward", "Move backward a character" },
!    { ea_beg_of_line, "echo-area-beg-of-line", "Move to the start of this line" },
!    { ea_end_of_line, "echo-area-end-of-line", "Move to the end of this line" },
!    { ea_forward_word, "echo-area-forward-word", "Move forward a word" },
!    { ea_backward_word, "echo-area-backward-word", "Move backward a word" },
!    { ea_delete, "echo-area-delete", "Delete the character under the cursor" },
!    { ea_rubout, "echo-area-rubout", "Delete the character behind the cursor" },
!    { ea_abort, "echo-area-abort", "Cancel or quit operation" },
!    { ea_newline, "echo-area-newline", "Accept (or force completion of) this line" },
!    { ea_quoted_insert, "echo-area-quoted-insert", "Insert next character verbatim" },
!    { ea_insert, "echo-area-insert", "Insert this character" },
!    { ea_tab_insert, "echo-area-tab-insert", "Insert a TAB character" },
!    { ea_transpose_chars, "echo-area-transpose-chars", "Transpose characters at point" },
!    { ea_yank, "echo-area-yank", "Yank back the contents of the last kill" },
!    { ea_yank_pop, "echo-area-yank-pop", "Yank back a previous kill" },
!    { ea_kill_line, "echo-area-kill-line", "Kill to the end of the line" },
!    { ea_backward_kill_line, "echo-area-backward-kill-line", "Kill to the beginning of the line" },
!    { ea_kill_word, "echo-area-kill-word", "Kill the word following the cursor" },
!    { ea_backward_kill_word, "echo-area-backward-kill-word", "Kill the word preceding the cursor" },
!    { ea_possible_completions, "echo-area-possible-completions", "List possible completions" },
!    { ea_complete, "echo-area-complete", "Insert completion" },
!    { ea_scroll_completions_window, "echo-area-scroll-completions-window", "Scroll the completions window" },
! /* Commands found in "footnotes.c". */
!    { info_show_footnotes, "show-footnotes", "Show the footnotes associated with this node in another window" },
! /* Commands found in "indices.c". */
!    { info_index_search, "index-search", "Look up a string in the index for this file" },
!    { info_next_index_match, "next-index-match", "Go to the next matching index item from the last `\\[index-search]' command" },
!    { info_index_apropos, "index-apropos", "Grovel all known info file's indices for a string and build a menu" },
! /* Commands found in "infodoc.c". */
!    { info_get_help_window, "get-help-window", "Display help message" },
!    { info_get_info_help_node, "get-info-help-node", "Visit Info node `(info)Help'" },
!    { describe_key, "describe-key", "Print documentation for KEY" },
!    { info_where_is, "where-is", "Show what to type to execute a given command" },
! /* Commands found in "m-x.c". */
!    { describe_command, "describe-command", "Read the name of an Info command and describe it" },
!    { info_execute_command, "execute-command", "Read a command name in the echo area and execute it" },
!    { set_screen_height, "set-screen-height", "Set the height of the displayed window" },
! /* Commands found in "nodemenu.c". */
!    { list_visited_nodes, "list-visited-nodes", "Make a window containing a menu of all of the currently visited nodes" },
!    { select_visited_node, "select-visited-node", "Select a node which has been previously visited in a visible window" },
! /* Commands found in "session.c". */
     { info_next_line, "next-line", "Move down to the next line" },
     { info_prev_line, "prev-line", "Move up to the previous line" },
     { info_end_of_line, "end-of-line", "Move to the end of the line" },
***************
*** 80,128 ****
     { info_add_digit_to_numeric_arg, "add-digit-to-numeric-arg", "Add this digit to the current numeric argument" },
     { info_universal_argument, "universal-argument", "Start (or multiply by 4) the current numeric argument" },
     { info_numeric_arg_digit_loop, "numeric-arg-digit-loop", "Internally used by \\[universal-argument]" },
! /* Commands found in "./echo-area.c". */
!    { ea_forward, "echo-area-forward", "Move forward a character" },
!    { ea_backward, "echo-area-backward", "Move backward a character" },
!    { ea_beg_of_line, "echo-area-beg-of-line", "Move to the start of this line" },
!    { ea_end_of_line, "echo-area-end-of-line", "Move to the end of this line" },
!    { ea_forward_word, "echo-area-forward-word", "Move forward a word" },
!    { ea_backward_word, "echo-area-backward-word", "Move backward a word" },
!    { ea_delete, "echo-area-delete", "Delete the character under the cursor" },
!    { ea_rubout, "echo-area-rubout", "Delete the character behind the cursor" },
!    { ea_abort, "echo-area-abort", "Cancel or quit operation" },
!    { ea_newline, "echo-area-newline", "Accept (or force completion of) this line" },
!    { ea_quoted_insert, "echo-area-quoted-insert", "Insert next character verbatim" },
!    { ea_insert, "echo-area-insert", "Insert this character" },
!    { ea_tab_insert, "echo-area-tab-insert", "Insert a TAB character" },
!    { ea_transpose_chars, "echo-area-transpose-chars", "Transpose characters at point" },
!    { ea_yank, "echo-area-yank", "Yank back the contents of the last kill" },
!    { ea_yank_pop, "echo-area-yank-pop", "Yank back a previous kill" },
!    { ea_kill_line, "echo-area-kill-line", "Kill to the end of the line" },
!    { ea_backward_kill_line, "echo-area-backward-kill-line", "Kill to the beginning of the line" },
!    { ea_kill_word, "echo-area-kill-word", "Kill the word following the cursor" },
!    { ea_backward_kill_word, "echo-area-backward-kill-word", "Kill the word preceding the cursor" },
!    { ea_possible_completions, "echo-area-possible-completions", "List possible completions" },
!    { ea_complete, "echo-area-complete", "Insert completion" },
!    { ea_scroll_completions_window, "echo-area-scroll-completions-window", "Scroll the completions window" },
! /* Commands found in "./infodoc.c". */
!    { info_get_help_window, "get-help-window", "Display help message" },
!    { info_get_info_help_node, "get-info-help-node", "Visit Info node `(info)Help'" },
!    { describe_key, "describe-key", "Print documentation for KEY" },
!    { info_where_is, "where-is", "Show what to type to execute a given command" },
! /* Commands found in "./m-x.c". */
!    { describe_command, "describe-command", "Read the name of an Info command and describe it" },
!    { info_execute_command, "execute-command", "Read a command name in the echo area and execute it" },
!    { set_screen_height, "set-screen-height", "Set the height of the displayed window" },
! /* Commands found in "./indices.c". */
!    { info_index_search, "index-search", "Look up a string in the index for this file" },
!    { info_next_index_match, "next-index-match", "Go to the next matching index item from the last `\\[index-search]' command" },
!    { info_index_apropos, "index-apropos", "Grovel all known info file's indices for a string and build a menu" },
! /* Commands found in "./nodemenu.c". */
!    { list_visited_nodes, "list-visited-nodes", "Make a window containing a menu of all of the currently visited nodes" },
!    { select_visited_node, "select-visited-node", "Select a node which has been previously visited in a visible window" },
! /* Commands found in "./footnotes.c". */
!    { info_show_footnotes, "show-footnotes", "Show the footnotes associated with this node in another window" },
! /* Commands found in "./variables.c". */
     { describe_variable, "describe-variable", "Explain the use of a variable" },
     { set_variable, "set-variable", "Set the value of an Info variable" },
     { (VFunction *)NULL, (char *)NULL, (char *)NULL }
--- 122,128 ----
     { info_add_digit_to_numeric_arg, "add-digit-to-numeric-arg", "Add this digit to the current numeric argument" },
     { info_universal_argument, "universal-argument", "Start (or multiply by 4) the current numeric argument" },
     { info_numeric_arg_digit_loop, "numeric-arg-digit-loop", "Internally used by \\[universal-argument]" },
! /* Commands found in "variables.c". */
     { describe_variable, "describe-variable", "Explain the use of a variable" },
     { set_variable, "set-variable", "Set the value of an Info variable" },
     { (VFunction *)NULL, (char *)NULL, (char *)NULL }
diff -cwr n:/project/C/texinfo-3.12.orig/info/dribble.c i:/project/C/texinfo-3.12/info/dribble.c
*** n:/project/C/texinfo-3.12.orig/info/dribble.c	Tue Jul 15 19:32:22 1997
--- i:/project/C/texinfo-3.12/info/dribble.c	Tue Apr 27 13:02:46 1999
***************
*** 21,26 ****
--- 21,28 ----
  
     Written by Brian Fox (bfox@ai.mit.edu). */
  
+ /* Modified by Klaus Gebhardt, 1999 */
+ 
  #include "info.h"
  #include "dribble.h"
  
***************
*** 37,43 ****
--- 39,49 ----
    /* Perhaps close existing dribble file. */
    close_dribble_file ();
  
+ #ifdef __EMX__
+   info_dribble_file = fopen (name, "wb");
+ #else
    info_dribble_file = fopen (name, "w");
+ #endif
  
  #if defined (HAVE_SETVBUF)
    if (info_dribble_file)
diff -cwr n:/project/C/texinfo-3.12.orig/info/filesys.c i:/project/C/texinfo-3.12/info/filesys.c
*** n:/project/C/texinfo-3.12.orig/info/filesys.c	Sat Feb 21 23:52:46 1998
--- i:/project/C/texinfo-3.12/info/filesys.c	Tue Apr 27 22:25:22 1999
***************
*** 19,24 ****
--- 19,26 ----
  
     Written by Brian Fox (bfox@ai.mit.edu). */
  
+ /* Modified by Klaus Gebhardt, 1999 */
+ 
  #include "info.h"
  
  #include "tilde.h"
***************
*** 26,31 ****
--- 28,36 ----
  
  /* Local to this file. */
  static char *info_file_in_path (), *lookup_info_filename ();
+ #ifdef __EMX__
+ static char *info_check_file ();
+ #endif
  static void remember_info_filename (), maybe_initialize_infopath ();
  
  typedef struct
***************
*** 39,52 ****
--- 44,67 ----
    ".info",
    "-info",
    "/index",
+ #ifdef __EMX__
+   ".inf",
+ #endif
    (char *)NULL
  };
  
  static COMPRESSION_ALIST compress_suffixes[] = {
+ #ifdef __EMX__
+   { ".Z", "compress -d" },
+   { ".Y", "yabba -d" },
+   { ".z", "gzip -d" },
+   { ".gz", "gzip -d" },
+ #else
    { ".Z", "uncompress" },
    { ".Y", "unyabba" },
    { ".z", "gunzip" },
    { ".gz", "gunzip" },
+ #endif
    { (char *)NULL, (char *)NULL }
  };
  
***************
*** 87,99 ****
--- 102,124 ----
           various extensions to it.  I guess we have to stat this file
           after all. */
        if (initial_character == '/')
+ #ifdef __EMX__
+ 	temp = info_check_file (partial);
+       else if (_fngetdrive (partial) != 0)
+ 	temp = info_check_file (partial);
+ #else
          temp = info_file_in_path (partial + 1, "/");
+ #endif
        else if (initial_character == '~')
          {
            expansion = tilde_expand_word (partial);
            if (*expansion == '/')
              {
+ #ifdef __EMX__
+ 	      temp = info_check_file (expansion);
+ #else
                temp = info_file_in_path (expansion + 1, "/");
+ #endif
                free (expansion);
              }
            else
***************
*** 117,123 ****
--- 142,154 ----
  
            strcat (local_temp_filename, "/");
            strcat (local_temp_filename, partial);
+ #ifdef __EMX__
+ 	  temp = info_check_file (local_temp_filename);
+ 	  free (local_temp_filename);
+ 	  return (temp);
+ #else
            return (local_temp_filename);
+ #endif
          }
        else
          temp = info_file_in_path (partial, infopath);
***************
*** 144,158 ****
--- 175,196 ----
  info_file_in_path (filename, path)
       char *filename, *path;
  {
+ #ifdef __EMX__
+   char *temp_dirname, *final_name;
+   int dirname_index;
+ #else
    struct stat finfo;
    char *temp_dirname;
    int statable, dirname_index;
+ #endif
  
    dirname_index = 0;
  
    while ((temp_dirname = extract_colon_unit (path, &dirname_index)))
      {
+ #ifndef __EMX__
        register int i, pre_suffix_length;
+ #endif
        char *temp;
  
        /* Expand a leading tilde if one is present. */
***************
*** 171,180 ****
--- 209,244 ----
          strcat (temp, "/");
        strcat (temp, filename);
  
+ #ifndef __EMX__
        pre_suffix_length = strlen (temp);
+ #endif
  
        free (temp_dirname);
  
+ #ifdef __EMX__
+       final_name = info_check_file (temp);
+       free (temp);
+       if (final_name)
+ 	return (final_name);
+     }
+   return ((char *)NULL);
+ }
+ 
+ /* check if the file exists, possibly trying the compressed file suffixes */
+ static char *
+ info_check_file (filename)
+      char *filename;
+ {
+   register int i, statable, pre_suffix_length;
+   struct stat finfo;
+   char *temp;
+ 
+   temp = (char *)xmalloc (30 + strlen (filename));
+   strcpy (temp, filename);
+ 
+   pre_suffix_length = strlen (temp);
+ #endif
+ 
        for (i = 0; info_suffixes[i]; i++)
          {
            strcpy (temp + pre_suffix_length, info_suffixes[i]);
***************
*** 223,230 ****
--- 287,296 ----
                      return (temp);
                  }
              }
+ #ifndef __EMX__
  	}
        free (temp);
+ #endif
      }
    return ((char *)NULL);
  }
***************
*** 243,249 ****
    if ((i >= strlen (string)) || !string)
      return ((char *) NULL);
  
!   while (string[i] && string[i] != ':')
      i++;
    if (i == start)
      {
--- 309,315 ----
    if ((i >= strlen (string)) || !string)
      return ((char *) NULL);
  
!   while (string[i] && string[i] != COLONCHR)
      i++;
    if (i == start)
      {
***************
*** 354,367 ****
      strcpy (infopath, path);
    else if (where == INFOPATH_APPEND)
      {
!       strcat (infopath, ":");
        strcat (infopath, path);
      }
    else if (where == INFOPATH_PREPEND)
      {
        char *temp = xstrdup (infopath);
        strcpy (infopath, path);
!       strcat (infopath, ":");
        strcat (infopath, temp);
        free (temp);
      }
--- 420,433 ----
      strcpy (infopath, path);
    else if (where == INFOPATH_APPEND)
      {
!       strcat (infopath, COLONSTR);
        strcat (infopath, path);
      }
    else if (where == INFOPATH_PREPEND)
      {
        char *temp = xstrdup (infopath);
        strcpy (infopath, path);
!       strcat (infopath, COLONSTR);
        strcat (infopath, temp);
        free (temp);
      }
***************
*** 411,417 ****
--- 477,488 ----
        /* Try to read the contents of this file. */
        st_size = (long) finfo->st_size;
        contents = (char *)xmalloc (1 + st_size);
+ #ifdef __EMX__
+       st_size = read (descriptor, contents, finfo->st_size);
+       if (st_size == -1)
+ #else
        if ((read (descriptor, contents, st_size)) != st_size)
+ #endif
          {
            filesys_error_number = errno;
            close (descriptor);
***************
*** 420,425 ****
--- 491,500 ----
          }
  
        close (descriptor);
+ 
+ #ifdef __EMX__
+       finfo->st_size = st_size;
+ #endif
  
        *filesize = st_size;
        return (contents);
diff -cwr n:/project/C/texinfo-3.12.orig/info/filesys.h i:/project/C/texinfo-3.12/info/filesys.h
*** n:/project/C/texinfo-3.12.orig/info/filesys.h	Mon Aug  4 21:21:34 1997
--- i:/project/C/texinfo-3.12/info/filesys.h	Tue Apr 27 12:56:12 1999
***************
*** 22,27 ****
--- 22,29 ----
  
     Written by Brian Fox (bfox@ai.mit.edu). */
  
+ /* Modified by Klaus Gebhardt, 1999 */
+ 
  #ifndef INFO_FILESYS_H
  #define INFO_FILESYS_H
  
***************
*** 71,77 ****
--- 73,83 ----
  
  /* The default value of INFOPATH. */
  #if !defined (DEFAULT_INFOPATH)
+ #ifdef __EMX__
+ #define DEFAULT_INFOPATH ".;h:/data/info"
+ #else
  #  define DEFAULT_INFOPATH "/usr/local/info:/usr/info:/usr/local/lib/info:/usr/lib/info:/usr/local/gnu/info:/usr/local/gnu/lib/info:/usr/gnu/info:/usr/gnu/lib/info:/opt/gnu/info:/usr/share/info:/usr/share/lib/info:/usr/local/share/info:/usr/local/share/lib/info:/usr/gnu/lib/emacs/info:/usr/local/gnu/lib/emacs/info:/usr/local/lib/emacs/info:/usr/local/emacs/info:."
+ #endif
  #endif /* !DEFAULT_INFOPATH */
  
  #if !defined (S_ISREG) && defined (S_IFREG)
diff -cwr n:/project/C/texinfo-3.12.orig/info/funs.h i:/project/C/texinfo-3.12/info/funs.h
*** n:/project/C/texinfo-3.12.orig/info/funs.h	Tue Mar  3 19:31:02 1998
--- i:/project/C/texinfo-3.12/info/funs.h	Wed Apr 28 21:15:04 1999
***************
*** 1,6 ****
  /* funs.h -- Generated declarations for Info commands. */
  
! /* Functions declared in "./session.c". */
  extern void info_next_line ();
  extern void info_prev_line ();
  extern void info_end_of_line ();
--- 1,54 ----
  /* funs.h -- Generated declarations for Info commands. */
  
! /* Functions declared in "echo-area.c". */
! extern void ea_forward ();
! extern void ea_backward ();
! extern void ea_beg_of_line ();
! extern void ea_end_of_line ();
! extern void ea_forward_word ();
! extern void ea_backward_word ();
! extern void ea_delete ();
! extern void ea_rubout ();
! extern void ea_abort ();
! extern void ea_newline ();
! extern void ea_quoted_insert ();
! extern void ea_insert ();
! extern void ea_tab_insert ();
! extern void ea_transpose_chars ();
! extern void ea_yank ();
! extern void ea_yank_pop ();
! extern void ea_kill_line ();
! extern void ea_backward_kill_line ();
! extern void ea_kill_word ();
! extern void ea_backward_kill_word ();
! extern void ea_possible_completions ();
! extern void ea_complete ();
! extern void ea_scroll_completions_window ();
! 
! /* Functions declared in "footnotes.c". */
! extern void info_show_footnotes ();
! 
! /* Functions declared in "indices.c". */
! extern void info_index_search ();
! extern void info_next_index_match ();
! extern void info_index_apropos ();
! 
! /* Functions declared in "infodoc.c". */
! extern void info_get_help_window ();
! extern void info_get_info_help_node ();
! extern void describe_key ();
! extern void info_where_is ();
! 
! /* Functions declared in "m-x.c". */
! extern void describe_command ();
! extern void info_execute_command ();
! extern void set_screen_height ();
! 
! /* Functions declared in "nodemenu.c". */
! extern void list_visited_nodes ();
! extern void select_visited_node ();
! 
! /* Functions declared in "session.c". */
  extern void info_next_line ();
  extern void info_prev_line ();
  extern void info_end_of_line ();
***************
*** 58,111 ****
  extern void info_universal_argument ();
  extern void info_numeric_arg_digit_loop ();
  
! /* Functions declared in "./echo-area.c". */
! extern void ea_forward ();
! extern void ea_backward ();
! extern void ea_beg_of_line ();
! extern void ea_end_of_line ();
! extern void ea_forward_word ();
! extern void ea_backward_word ();
! extern void ea_delete ();
! extern void ea_rubout ();
! extern void ea_abort ();
! extern void ea_newline ();
! extern void ea_quoted_insert ();
! extern void ea_insert ();
! extern void ea_tab_insert ();
! extern void ea_transpose_chars ();
! extern void ea_yank ();
! extern void ea_yank_pop ();
! extern void ea_kill_line ();
! extern void ea_backward_kill_line ();
! extern void ea_kill_word ();
! extern void ea_backward_kill_word ();
! extern void ea_possible_completions ();
! extern void ea_complete ();
! extern void ea_scroll_completions_window ();
! 
! /* Functions declared in "./infodoc.c". */
! extern void info_get_help_window ();
! extern void info_get_info_help_node ();
! extern void describe_key ();
! extern void info_where_is ();
! 
! /* Functions declared in "./m-x.c". */
! extern void describe_command ();
! extern void info_execute_command ();
! extern void set_screen_height ();
! 
! /* Functions declared in "./indices.c". */
! extern void info_index_search ();
! extern void info_next_index_match ();
! extern void info_index_apropos ();
! 
! /* Functions declared in "./nodemenu.c". */
! extern void list_visited_nodes ();
! extern void select_visited_node ();
! 
! /* Functions declared in "./footnotes.c". */
! extern void info_show_footnotes ();
! 
! /* Functions declared in "./variables.c". */
  extern void describe_variable ();
  extern void set_variable ();
--- 106,111 ----
  extern void info_universal_argument ();
  extern void info_numeric_arg_digit_loop ();
  
! /* Functions declared in "variables.c". */
  extern void describe_variable ();
  extern void set_variable ();
diff -cwr n:/project/C/texinfo-3.12.orig/info/info-utils.c i:/project/C/texinfo-3.12/info/info-utils.c
*** n:/project/C/texinfo-3.12.orig/info/info-utils.c	Tue Jul 15 19:33:54 1997
--- i:/project/C/texinfo-3.12/info/info-utils.c	Tue Apr 27 14:09:20 1999
***************
*** 21,26 ****
--- 21,35 ----
  
     Written by Brian Fox (bfox@ai.mit.edu). */
  
+ /* Modified by Klaus Gebhardt, 1999 */
+ 
+ #ifdef __EMX__
+ #include <unistd.h>
+ #include <stdlib.h>
+ #include <string.h>
+ #include <ctype.h>
+ #endif
+ 
  #include "info.h"
  #include "info-utils.h"
  #if defined (HANDLE_MAN_PAGES)
***************
*** 663,665 ****
--- 672,726 ----
  
    return (win);
  }
+ 
+ #ifndef HAVE_STRERROR
+ char *strerror (int num)
+ {
+   if (num >= sys_nerr)  return ("");
+   else                  return (char *) sys_errlist[num];
+ }
+ #endif
+ 
+ #define info_toupper(x) (islower (x) ? toupper (x) : x)
+ #define info_tolower(x) (isupper (x) ? tolower (x) : x)
+ 
+ #ifndef HAVE_STRCASECMP
+ int strcasecmp (char *string1, char *string2)
+ {
+   int ch1, ch2;
+ 
+   for (;;)
+     {
+       ch1 = *string1++;
+       ch2 = *string2++;
+ 
+       if (!(ch1 | ch2))  return 0;
+ 
+       ch1 = info_toupper (ch1);
+       ch2 = info_toupper (ch2);
+ 
+       if (ch1 != ch2)  return ch1-ch2;
+     }
+ }
+ #endif
+ 
+ #ifndef HAVE_STRNCASECMP
+ int strncasecmp (char *string1, char *string2, int count)
+ {
+   register int ch1, ch2;
+ 
+   while (count)
+     {
+       ch1 = *string1++;
+       ch2 = *string2++;
+ 
+       ch1 = info_toupper (ch1);
+       ch2 = info_toupper (ch2);
+ 
+       if (ch1 == ch2)  count--;
+       else             break;
+     }
+ 
+   return count;
+ }
+ #endif
diff -cwr n:/project/C/texinfo-3.12.orig/info/info-utils.h i:/project/C/texinfo-3.12/info/info-utils.h
*** n:/project/C/texinfo-3.12.orig/info/info-utils.h	Tue Jul 15 19:42:20 1997
--- i:/project/C/texinfo-3.12/info/info-utils.h	Tue Apr 27 12:18:24 1999
***************
*** 22,27 ****
--- 22,29 ----
  
     Written by Brian Fox (bfox@ai.mit.edu). */
  
+ /* Modified by Klaus Gebhardt, 1999 */
+ 
  #ifndef INFO_UTILS_H
  #define INFO_UTILS_H
  
***************
*** 136,140 ****
--- 138,155 ----
      if (!info_label_was_found) \
        info_parse_label (INFO_ALTPREV_LABEL, n); \
    } while (0)
+ 
+ 
+ #ifndef HAVE_STRERROR
+ extern char *strerror ();
+ #endif
+ 
+ #ifndef HAVE_STRCASECMP
+ extern int strcasecmp ();
+ #endif
+ 
+ #ifndef HAVE_STRNCASECMP
+ extern int strncasecmp ();
+ #endif
  
  #endif /* not INFO_UTILS_H */
diff -cwr n:/project/C/texinfo-3.12.orig/info/info.c i:/project/C/texinfo-3.12/info/info.c
*** n:/project/C/texinfo-3.12.orig/info/info.c	Fri Feb 27 22:37:26 1998
--- i:/project/C/texinfo-3.12/info/info.c	Tue Apr 27 20:53:28 1999
***************
*** 19,24 ****
--- 19,26 ----
  
     Written by Brian Fox (bfox@ai.mit.edu). */
  
+ /* Modified by Klaus Gebhardt, 1999 */
+ 
  #include "info.h"
  #include "indices.h"
  #include "dribble.h"
***************
*** 30,35 ****
--- 32,40 ----
  /* The version numbers of this version of Info. */
  int info_major_version = 2;
  int info_minor_version = 18;
+ #ifdef __EMX__
+ int info_patch_level = 0;
+ #endif
  
  /* basename (argv[0]) */
  static char *program_name = NULL;
***************
*** 96,102 ****
--- 101,111 ----
  };
  
  /* String describing the shorthand versions of the long options found above. */
+ #ifdef __EMX__
+ static char *short_options = "d:n:f:o:sh?";
+ #else
  static char *short_options = "d:n:f:o:s";
+ #endif
  
  /* When non-zero, the Info window system has been initialized. */
  int info_windows_initialized_p = 0;
***************
*** 121,134 ****
--- 130,149 ----
  
    remember_info_program_name (argv[0]);
  
+ #ifdef __EMX__
+   setvbuf(stdout, NULL, _IOFBF, BUFSIZ);
+ #endif
+ 
  #ifdef HAVE_SETLOCALE
    /* Set locale via LC_ALL.  */
    setlocale (LC_ALL, "");
  #endif
  
+ #ifndef __EMX__
    /* Set the text message domain.  */
    bindtextdomain (PACKAGE, LOCALEDIR);
    textdomain (PACKAGE);
+ #endif
  
    while (1)
      {
***************
*** 177,182 ****
--- 192,204 ----
            user_output_filename = xstrdup (optarg);
            break;
  
+ #ifdef __EMX__
+ 	  /* User is requesting help. */
+ 	case 'h':
+ 	  print_help_p = 1;
+ 	  break;
+ #endif /* EMX */
+ 
            /* User is specifying that she wishes to dump the subnodes of
               the node that she is dumping. */
          case 's':
***************
*** 255,261 ****
          {
            unsigned len = strlen (path_from_env);
            /* Trailing : on INFOPATH means insert the default path.  */
!           if (len && path_from_env[len - 1] == ':')
              {
                path_from_env[len - 1] = 0;
                info_add_path (DEFAULT_INFOPATH, INFOPATH_PREPEND);
--- 277,283 ----
          {
            unsigned len = strlen (path_from_env);
            /* Trailing : on INFOPATH means insert the default path.  */
!           if (len && path_from_env[len - 1] == COLONCHR)
              {
                path_from_env[len - 1] = 0;
                info_add_path (DEFAULT_INFOPATH, INFOPATH_PREPEND);
***************
*** 335,340 ****
--- 357,363 ----
       session in the node corresponding to the first match. */
    if (index_search_p)
      {
+ #ifndef __EMX__
        int status = 0;
  
        initialize_info_session (initial_node, 0);
***************
*** 366,371 ****
--- 389,416 ----
  
        close_dribble_file (); 
        exit (status);
+ #else
+       int status = external_info_search (initial_node, 0,
+                                          user_filename, index_search_string);
+ 
+       if (status == 1)
+         {
+           info_read_and_dispatch ();
+           terminal_unprep_terminal ();
+           fflush (stdout);
+         }
+ 
+       if (status == 0)
+         info_error ("%s: Entry not found", index_search_string, NULL);
+ 
+       close_dribble_file ();
+ 
+       terminal_goto_xy (0, screenheight - 2);
+       terminal_clear_to_eol ();
+       terminal_unprep_terminal ();
+ 
+       exit (status * status - 1);
+ #endif
      }
  
    /* If there are arguments remaining, they are the names of menu items
***************
*** 533,538 ****
--- 578,590 ----
      {
        vstring = (char *)xmalloc (50);
        sprintf (vstring, "%d.%d", info_major_version, info_minor_version);
+ 
+ #ifdef __EMX__
+       if (info_patch_level)
+ 	sprintf (vstring + strlen (vstring), "-p%d", info_patch_level);
+ 
+       sprintf (vstring + strlen (vstring), " for OS/2 2.x and Warp");
+ #endif
      }
    return (vstring);
  }
***************
*** 566,574 ****
--- 618,635 ----
  {
    info_error_was_printed = 1;
  
+ #ifndef __EMX__
    if (!info_windows_initialized_p || display_inhibited)
+ #else
+   if (!info_windows_initialized_p || display_inhibited
+       || external_info_search_P)
+ #endif
      {
+ #ifdef __EMX__
+       fprintf (stderr, "GNU-Info (%s): ", program_name);
+ #else
        fprintf (stderr, "%s: ", program_name);
+ #endif
        fprintf (stderr, format, arg1, arg2);
        fprintf (stderr, "\n");
        fflush (stderr);
***************
*** 609,614 ****
--- 670,676 ----
  --directory DIR              add DIR to INFOPATH.\n\
  --dribble FILENAME           remember user keystrokes in FILENAME.\n\
  --file FILENAME              specify Info file to visit.\n\
+ --index-search STRING        Specify STRING to search for in the index.\n\
  --node NODENAME              specify nodes in first visited Info file.\n\
  --output FILENAME            output selected nodes to FILENAME.\n\
  --restore FILENAME           read initial keystrokes from FILENAME.\n\
***************
*** 621,627 ****
  items in the initial node visited.  For example, `info emacs buffers'\n\
  moves to the node `buffers' in the info file `emacs'.\n\
  \n\
! Email bug reports to bug-texinfo@gnu.org."), program_name);
  
    exit (0);
  }
--- 683,690 ----
  items in the initial node visited.  For example, `info emacs buffers'\n\
  moves to the node `buffers' in the info file `emacs'.\n\
  \n\
! OS/2 port by Klaus Gebhardt, 1999.\n\
! Email bug reports to 10014.1371@compuserve.com."), program_name);
  
    exit (0);
  }
diff -cwr n:/project/C/texinfo-3.12.orig/info/info.h i:/project/C/texinfo-3.12/info/info.h
*** n:/project/C/texinfo-3.12.orig/info/info.h	Fri Feb 27 22:36:04 1998
--- i:/project/C/texinfo-3.12/info/info.h	Tue Apr 27 23:15:44 1999
***************
*** 22,27 ****
--- 22,29 ----
  
     Written by Brian Fox (bfox@ai.mit.edu). */
  
+ /* Modified by Klaus Gebhardt, 1999 */
+ 
  #if !defined (INFO_H)
  #define INFO_H
  
***************
*** 54,60 ****
--- 56,66 ----
  #endif /* !whitespace */
  
  #if !defined (whitespace_or_newline)
+ #ifdef __EMX__
+ #  define whitespace_or_newline(c) (whitespace (c) || (c == '\n') || (c == '\r'))
+ #else
  #  define whitespace_or_newline(c) (whitespace (c) || (c == '\n'))
+ #endif
  #endif /* !whitespace_or_newline */
  
  /* Add POINTER to the list of pointers found in ARRAY.  SLOTS is the number
***************
*** 161,165 ****
--- 167,185 ----
  /* Found in window.c. */
  extern void message_in_echo_area (), unmessage_in_echo_area ();
  #endif /* !BUILDING_LIBRARY */
+ 
+ #ifdef __EMX__
+ /* Info started through external_info_search: */
+ extern int external_info_search_P;
+ #endif
+ 
+ #ifdef __EMX__
+ #define COLONCHR ';'
+ #define COLONSTR ";"
+ #else
+ #define COLONCHR ':'
+ #define COLONSTR ":"
+ #endif
+ 
  
  #endif /* !INFO_H */
diff -cwr n:/project/C/texinfo-3.12.orig/info/makedoc.c i:/project/C/texinfo-3.12/info/makedoc.c
*** n:/project/C/texinfo-3.12.orig/info/makedoc.c	Tue Jul 15 19:36:02 1997
--- i:/project/C/texinfo-3.12/info/makedoc.c	Tue Apr 27 13:27:16 1999
***************
*** 22,27 ****
--- 22,29 ----
  
     Written by Brian Fox (bfox@ai.mit.edu). */
  
+ /* Modified by Klaus Gebhardt, 1999 */
+ 
  /* This program grovels the contents of the source files passed as arguments
     and writes out a file of function pointers and documentation strings, and
     a header file which describes the contents.  This only does the functions
***************
*** 261,267 ****
--- 263,273 ----
  
    file_size = (long) finfo.st_size;
    buffer = (char *)xmalloc (1 + file_size);
+ #ifdef __EMX__
+   file_size = read (descriptor, buffer, file_size);
+ #else
    read (descriptor, buffer, file_size);
+ #endif
    close (descriptor);
  
    offset = 0;
diff -cwr n:/project/C/texinfo-3.12.orig/info/man.c i:/project/C/texinfo-3.12/info/man.c
*** n:/project/C/texinfo-3.12.orig/info/man.c	Fri Aug  1 00:49:58 1997
--- i:/project/C/texinfo-3.12/info/man.c	Tue Apr 27 13:13:18 1999
***************
*** 19,24 ****
--- 19,26 ----
  
     Written by Brian Fox Thu May  4 09:17:52 1995 (bfox@ai.mit.edu). */
  
+ /* Modified by Klaus Gebhardt, 1999 */
+ 
  #include "info.h"
  #include <sys/ioctl.h>
  #include "signals.h"
***************
*** 29,34 ****
--- 31,41 ----
  #include <sys/wait.h>
  #endif
  
+ #ifdef __EMX__
+ #include <process.h>
+ #include <sys/wait.h>
+ #endif
+ 
  #include "tilde.h"
  #include "man.h"
  
***************
*** 153,159 ****
--- 160,176 ----
  
        free (temp_dirname);
  
+ #ifdef __EMX__
+       strcat (temp, ".cmd");
+       statable = (stat (temp, &finfo) == 0);
+       if (!statable)
+       {
+ 	strcpy(temp + strlen (temp) - 4, ".exe");
+       statable = (stat (temp, &finfo) == 0);
+       }
+ #else
        statable = (stat (temp, &finfo) == 0);
+ #endif
  
        /* If we have found a regular executable file, then use it. */
        if ((statable) && (S_ISREG (finfo.st_mode)) &&
***************
*** 247,252 ****
--- 264,301 ----
       writer end is pipes[1]. */
    pipe (pipes);
  
+ #ifdef __EMX__
+   {
+     int pid, old_stdout, old_stderr;
+     
+     old_stdout = dup (fileno (stdout));
+     fcntl (old_stdout, F_SETFD, FD_CLOEXEC);
+     dup2 (pipes[1], fileno (stdout));
+ 
+     old_stderr = dup (fileno (stderr));
+     fcntl (old_stderr, F_SETFD, FD_CLOEXEC);
+     close (fileno (stderr));
+     
+     close (pipes[1]);
+     fcntl (pipes[0], F_SETFD, FD_CLOEXEC);
+ 
+     pid = spawnv (P_NOWAIT, formatter_args[0], formatter_args);
+ 
+     close (fileno (stdout));
+     dup2 (old_stdout, fileno (stdout));
+     close (old_stdout);
+ 
+     dup2 (old_stderr, fileno (stderr));
+     close (old_stderr);
+ 
+     if (pid != -1)
+       formatted_page = read_from_fd (pipes[0]);
+ 
+     close (pipes[0]);
+ 
+     waitpid (pid, NULL, WNOHANG);
+   }
+ #else
    signal (SIGCHLD, reap_children);
  
    child = fork ();
***************
*** 278,283 ****
--- 327,333 ----
        close (pipes[1]);
        exit (0);
      }
+ #endif
  
    /* If we have the page, then clean it up. */
    if (formatted_page)
diff -cwr n:/project/C/texinfo-3.12.orig/info/nodes.c i:/project/C/texinfo-3.12/info/nodes.c
*** n:/project/C/texinfo-3.12.orig/info/nodes.c	Thu Jul 24 22:31:34 1997
--- i:/project/C/texinfo-3.12/info/nodes.c	Wed Apr 28 20:43:54 1999
***************
*** 21,26 ****
--- 21,28 ----
  
     Written by Brian Fox (bfox@ai.mit.edu). */
  
+ /* Modified by Klaus Gebhardt, 1999 */
+ 
  #include "info.h"
  
  #include "nodes.h"
***************
*** 273,280 ****
--- 275,286 ----
  
              old_info = &file_buffer->finfo;
  
+ #ifdef __EMX__
+ 	    if (new_info.st_mtime != old_info->st_mtime)
+ #else
              if ((new_info.st_size != old_info->st_size) ||
                  (new_info.st_mtime != old_info->st_mtime))
+ #endif
                {
                  /* The file has changed.  Forget that we ever had loaded it
                     in the first place. */
diff -cwr n:/project/C/texinfo-3.12.orig/info/session.c i:/project/C/texinfo-3.12/info/session.c
*** n:/project/C/texinfo-3.12.orig/info/session.c	Sun Feb 22 23:38:32 1998
--- i:/project/C/texinfo-3.12/info/session.c	Tue Apr 27 15:09:20 1999
***************
*** 19,27 ****
--- 19,33 ----
  
     Written by Brian Fox (bfox@ai.mit.edu). */
  
+ /* Modified by Klaus Gebhardt, 1999 */
+ 
  #include "info.h"
  #include <sys/ioctl.h>
  
+ #ifdef __EMX__
+ #  include <pc.h>
+ #endif
+ 
  #if defined (HAVE_SYS_TIME_H)
  #  include <sys/time.h>
  #  define HAVE_STRUCT_TIMEVAL
***************
*** 153,158 ****
--- 159,178 ----
    display_startup_message_and_start ();
  }
  
+ #ifdef __EMX__
+ /*
+ ** Diese Funktion wurde wieder eingefuegt, um die
+ ** Kompatibilitaet zu octave herzustellen.
+ ** 28.05.1994, Klaus Gebhardt
+ */
+ 
+ void
+ _finish_info_session ()
+ {
+   close_dribble_file ();
+ }
+ #endif
+ 
  void
  display_startup_message_and_start ()
  {
***************
*** 174,180 ****
--- 194,204 ----
    info_read_and_dispatch ();
    /* On program exit, leave the cursor at the bottom of the window, and
       restore the terminal I/O. */
+ #ifdef __EMX__
+   terminal_goto_xy (0, screenheight - 2);
+ #else
    terminal_goto_xy (0, screenheight - 1);
+ #endif
    terminal_clear_to_eol ();
    fflush (stdout);
    terminal_unprep_terminal ();
***************
*** 298,303 ****
--- 322,339 ----
    info_windows_initialized_p = 1;
  }
  
+ #ifdef __EMX__
+ void _initialize_info_session_without_clear_screen (NODE *node)
+ {
+   initialize_info_session (node, 0);
+ }
+ 
+ void _initialize_info_session (NODE *node)
+ {
+   initialize_info_session (node, 1);
+ }
+ #endif
+ 
  /* Tell Info that input is coming from the file FILENAME. */
  void
  info_set_input_from_file (filename)
***************
*** 305,311 ****
--- 341,351 ----
  {
    FILE *stream;
  
+ #ifdef EMX
+   stream = fopen (filename, "rb");
+ #else
    stream = fopen (filename, "r");
+ #endif
  
    if (!stream)
      return;
***************
*** 2476,2482 ****
--- 2516,2526 ----
    if (strcmp (output_filename, "-") == 0)
      output_stream = stdout;
    else
+ #ifdef __EMX__
+     output_stream = fopen (output_filename, "wb");
+ #else
      output_stream = fopen (output_filename, "w");
+ #endif
  
    if (!output_stream)
      {
***************
*** 2601,2607 ****
--- 2645,2655 ----
    if (strcmp (filename, "-") == 0)
      output_stream = stdout;
    else
+ #ifdef EMX
+     output_stream = fopen (filename, "wb");
+ #else
      output_stream = fopen (filename, "w");
+ #endif
  
    if (!output_stream)
      {
***************
*** 4147,4152 ****
--- 4195,4204 ----
  
    space_avail = info_input_buffer_space_available ();
  
+ #ifdef __EMX__
+   while (chars_avail < space_avail && (tty = pc_getc (0)) != -1)
+     input[chars_avail++] = tty;
+ #else
    /* If we can just find out how many characters there are to read, do so. */
  #if defined (FIONREAD)
    {
***************
*** 4174,4179 ****
--- 4226,4232 ----
    }
  #  endif /* O_NDELAY */
  #endif /* !FIONREAD */
+ #endif
  
    while (i < chars_avail)
      {
***************
*** 4198,4203 ****
--- 4251,4260 ----
    else if (info_get_key_from_typeahead (&keystroke) == 0)
      {
        int rawkey;
+ 
+ #ifdef __EMX__
+       rawkey = getc (info_input_stream);
+ #else
        unsigned char c;
        int tty = fileno (info_input_stream);
  
***************
*** 4220,4225 ****
--- 4277,4283 ----
  #else
        rawkey = (read (tty, &c, 1) == 1) ? c : EOF;
  #endif
+ #endif
  
        keystroke = rawkey;
  
***************
*** 4232,4238 ****
--- 4290,4300 ----
                display_inhibited = 0;
                display_update_display (windows);
                display_cursor_at_point (active_window);
+ #ifdef __EMX__
+ 	      rawkey = getc (info_input_stream);
+ #else
                rawkey = (read (tty, &c, 1) == 1) ? c : EOF;
+ #endif
                keystroke = rawkey;
              }
  
diff -cwr n:/project/C/texinfo-3.12.orig/info/session.h i:/project/C/texinfo-3.12/info/session.h
*** n:/project/C/texinfo-3.12.orig/info/session.h	Tue Jul 15 19:35:50 1997
--- i:/project/C/texinfo-3.12/info/session.h	Tue Apr 27 12:39:58 1999
***************
*** 21,26 ****
--- 21,28 ----
  
     Written by Brian Fox (bfox@ai.mit.edu). */
  
+ /* Modified by Klaus Gebhardt, 1999 */
+ 
  #if !defined (SESSION_H)
  #define SESSION_H
  
***************
*** 142,146 ****
--- 144,154 ----
  
  /* Miscellaneous commands. */
  extern void info_abort_key (), info_quit (), info_do_lowercase_version ();
+ 
+ #ifdef __EMX__
+ void _finish_info_session ();
+ void _initialize_info_session_without_clear_screen ();
+ void _initialize_info_session ();
+ #endif
  
  #endif /* SESSION_H */
diff -cwr n:/project/C/texinfo-3.12.orig/info/signals.c i:/project/C/texinfo-3.12/info/signals.c
*** n:/project/C/texinfo-3.12.orig/info/signals.c	Tue Jul 15 19:35:50 1997
--- i:/project/C/texinfo-3.12/info/signals.c	Tue Apr 27 13:53:14 1999
***************
*** 21,26 ****
--- 21,28 ----
  
     Written by Brian Fox (bfox@ai.mit.edu). */
  
+ /* Modified by Klaus Gebhardt, 1999 */
+ 
  #include "info.h"
  #include "signals.h"
  
***************
*** 127,138 ****
--- 129,148 ----
  
          /* For stop signals, restore the terminal IO, leave the cursor
             at the bottom of the window, and stop us. */
+ #ifdef __EMX__
+         terminal_goto_xy (0, screenheight - 2);
+ #else
          terminal_goto_xy (0, screenheight - 1);
+ #endif
          terminal_clear_to_eol ();
          fflush (stdout);
          terminal_unprep_terminal ();
          signal (sig, *old_signal_handler);
          UNBLOCK_SIGNAL (sig);
+ 
+ #ifdef __EMX__
+ 	if (external_info_search_P == 0)
+ #endif
  	  kill (getpid (), sig);
  
          /* The program is returning now.  Restore our signal handler,
diff -cwr n:/project/C/texinfo-3.12.orig/info/terminal.c i:/project/C/texinfo-3.12/info/terminal.c
*** n:/project/C/texinfo-3.12.orig/info/terminal.c	Sun Feb 22 01:05:14 1998
--- i:/project/C/texinfo-3.12/info/terminal.c	Tue Apr 27 13:48:22 1999
***************
*** 20,25 ****
--- 20,27 ----
  
     Written by Brian Fox (bfox@ai.mit.edu). */
  
+ /* Modified by Klaus Gebhardt, 1999 */
+ 
  #include "info.h"
  #include "terminal.h"
  #include "termdep.h"
***************
*** 133,138 ****
--- 135,141 ----
  static void
  terminal_begin_using_terminal ()
  {
+ #ifndef __EMX__
    RETSIGTYPE (*sigsave) ();
  
    if (term_keypad_on)
***************
*** 144,151 ****
--- 147,157 ----
  #ifdef SIGWINCH
    sigsave = signal (SIGWINCH, SIG_IGN); 
  #endif
+ #endif
  
    send_to_terminal (term_begin_use);
+ 
+ #ifndef __EMX__
    /* Without this fflush and sleep, running info in a shelltool or
       cmdtool (TERM=sun-cmd) with scrollbars loses -- the scrollbars are
       not restored properly.
***************
*** 156,161 ****
--- 162,168 ----
  #ifdef SIGWINCH
    signal (SIGWINCH, sigsave);
  #endif
+ #endif
  }
  
  /* Tell the terminal that we will not be doing any more cursor
***************
*** 163,168 ****
--- 170,179 ----
  static void
  terminal_end_using_terminal ()
  {
+ #ifdef __EMX__
+   terminal_goto_xy (0, screenheight - 2); /* cmd.exe writes extra newline */
+   send_to_terminal (term_end_use);
+ #else
    RETSIGTYPE (*sigsave) ();
  
    if (term_keypad_off)
***************
*** 182,187 ****
--- 193,199 ----
  #ifdef SIGWINCH
    signal (SIGWINCH, sigsave);
  #endif
+ #endif
  }
  
  /* **************************************************************** */
***************
*** 461,466 ****
--- 473,486 ----
      {
        screenwidth = screenheight = 0;
  
+ #ifdef __EMX__
+       {
+ 	int size[2];
+ 	_scrsize (size);
+ 	screenwidth  = size[0];
+ 	screenheight = size[1];
+       }
+ #else
  #if defined (TIOCGWINSZ)
        {
          struct winsize window_size;
***************
*** 472,477 ****
--- 492,498 ----
            }
        }
  #endif                          /* TIOCGWINSZ */
+ #endif
  
        /* Environment variable COLUMNS overrides setting of "co". */
        if (screenwidth <= 0)
***************
*** 681,686 ****
--- 702,710 ----
  
    tty = fileno (stdin);
  
+ #ifdef __EMX__
+   pc_init ();
+ #else
  #if defined (HAVE_TERMIOS_H)
    tcgetattr (tty, &original_termios);
    tcgetattr (tty, &ttybuff);
***************
*** 791,796 ****
--- 815,821 ----
    ttybuff.sg_flags |= CBREAK;
    ioctl (tty, TIOCSETN, &ttybuff);
  #endif /* !HAVE_TERMIOS_H && !HAVE_TERMIO_H */
+ #endif
  }
  
  /* Restore the tty settings back to what they were before we started using
***************
*** 808,813 ****
--- 833,841 ----
  
    tty = fileno (stdin);
  
+ #ifdef __EMX__
+   pc_exit ();
+ #else
  #if defined (HAVE_TERMIOS_H)
    tcsetattr (tty, TCSANOW, &original_termios);
  #else
***************
*** 832,837 ****
--- 860,867 ----
  
  #  endif /* !HAVE_TERMIO_H */
  #endif /* !HAVE_TERMIOS_H */
+ #endif
+ 
    terminal_end_using_terminal ();
  }
  
diff -cwr n:/project/C/texinfo-3.12.orig/info/tilde.c i:/project/C/texinfo-3.12/info/tilde.c
*** n:/project/C/texinfo-3.12.orig/info/tilde.c	Mon Feb 23 00:03:22 1998
--- i:/project/C/texinfo-3.12/info/tilde.c	Sat Apr 17 14:00:42 1999
***************
*** 23,28 ****
--- 23,30 ----
  
     Written by Brian Fox (bfox@ai.mit.edu). */
  
+ /* Modified by Klaus Gebhardt, 1999 */
+ 
  /* Indent #pragma so that older Cpp's don't try to parse it. */
  #ifdef _AIX
   #pragma alloca
***************
*** 30,35 ****
--- 32,41 ----
  
  /* Include config.h before doing alloca.  */
  #include "info.h"
+ 
+ #ifdef __EMX__
+ #include <pwd.h>
+ #endif
  
  #ifdef __GNUC__
  # undef alloca
diff -cwr n:/project/C/texinfo-3.12.orig/makeinfo/makeinfo.c i:/project/C/texinfo-3.12/makeinfo/makeinfo.c
*** n:/project/C/texinfo-3.12.orig/makeinfo/makeinfo.c	Wed Feb 25 21:36:26 1998
--- i:/project/C/texinfo-3.12/makeinfo/makeinfo.c	Tue Apr 27 15:46:30 1999
***************
*** 20,25 ****
--- 20,27 ----
  
     Makeinfo was authored by Brian Fox (bfox@ai.mit.edu). */
  
+ /* Modified by Klaus Gebhardt, 1999 */
+ 
  /* Indent #pragma so that older Cpp's don't try to parse it. */
  #ifdef _AIX
   #pragma alloca
***************
*** 50,59 ****
  # endif
  #endif
  
  /* We'd like to take advantage of _doprnt if it's around, a la error.c,
     but then we'd have no VA_SPRINTF.  */
! #if HAVE_VPRINTF
! # if __STDC__
  #  include <stdarg.h>
  #  define VA_START(args, lastarg) va_start(args, lastarg)
  # else
--- 52,65 ----
  # endif
  #endif
  
+ #ifdef __EMX__
+ #include <pwd.h>
+ #endif
+ 
  /* We'd like to take advantage of _doprnt if it's around, a la error.c,
     but then we'd have no VA_SPRINTF.  */
! #ifdef HAVE_VPRINTF
! # ifdef __STDC__
  #  include <stdarg.h>
  #  define VA_START(args, lastarg) va_start(args, lastarg)
  # else
***************
*** 948,956 ****
--- 954,964 ----
    setlocale (LC_MESSAGES, "");
  #endif
  
+ #ifndef __EMX__
    /* Set the text message domain.  */
    bindtextdomain (PACKAGE, LOCALEDIR);
    textdomain (PACKAGE);
+ #endif
  
    /* Parse argument flags from the input line. */
    while ((c = getopt_long (argc, argv, "D:e:E:f:I:o:p:P:r:s:U:V",
***************
*** 2639,2645 ****
  #ifdef VA_SPRINTF
    VA_SPRINTF (buffer, format, ap);
  #else
!   sprintf (temp_string, format, a1, a2, a3, a4, a5, a6, a7, a8);
  #endif /* not VA_SPRINTF */
    va_end (ap);
    add_word (buffer);
--- 2647,2653 ----
  #ifdef VA_SPRINTF
    VA_SPRINTF (buffer, format, ap);
  #else
!   sprintf (buffer, format, a1, a2, a3, a4, a5, a6, a7, a8);
  #endif /* not VA_SPRINTF */
    va_end (ap);
    add_word (buffer);
diff -cwr n:/project/C/texinfo-3.12.orig/util/texindex.c i:/project/C/texinfo-3.12/texindex/texindex.c
*** n:/project/C/texinfo-3.12.orig/util/texindex.c	Fri Feb 27 22:15:58 1998
--- i:/project/C/texinfo-3.12/texindex/texindex.c	Tue Apr 27 15:48:32 1999
***************
*** 176,184 ****
--- 176,186 ----
    setlocale (LC_ALL, "");
  #endif
  
+ #ifndef __EMX__
    /* Set the text message domain.  */
    bindtextdomain (PACKAGE, LOCALEDIR);
    textdomain (PACKAGE);
+ #endif
  
    /* Describe the kind of sorting to do. */
    /* The first keyfield uses the first braced field and folds case. */
